Die handleChange()Funktion, die Sie in vielen React-Komponentenbeispielen sehen, ist eine reguläre Funktion, die erstellt wurde, um Eingabeänderungen zu verarbeiten.
Es wird üblicherweise an die Eigenschaft eines <input>Elements übergeben onChange, um Benutzereingaben abzufangen.

Wenn der Benutzer Ihr Element eingibt <input>, onChangeerstellt die Ereignishandlerfunktion ein eventObjekt und übergibt es an die handleChange()Funktion.

In dieser handleChange()Funktion können Sie Ihre Statusaktualisierungsfunktion aufrufen , um den Status Ihrer Komponente gemäß dem Wert der event.target.valueEigenschaft zu aktualisieren.

Jeder Tastaturanschlag innerhalb des <input>Elements löst den onChangeEreignishandler aus, und der onChangeHandler ruft die handleChange()Funktion auf.

Sie können den handleChange()Funktionsnamen in andere Namen ändern. Solange die Funktion der onChangeEigenschaft zugewiesen ist, wird die Funktion immer dann aufgerufen, wenn eine Änderung ausgelöst wird.
Und so können Sie die Änderung von einem einzelnen Eingabeelement aus handhaben.

Das eventObjekt enthält die Details zum Ereignis, aber Sie müssen sich nur auf zwei Eigenschaften konzentrieren:
    *event.target.name
    *event.target.value
Der event.target.nameWert spiegelt das nameAttribut wider, das Sie in Ihrem <input>Element angegeben haben, während die event.target.valueEigenschaft den neuesten Wert des <input>Elements widerspiegelt.

***KeyDown tritt auf, wenn der Benutzer eine Taste drückt. KeyUp tritt auf, wenn der Benutzer eine Taste loslässt